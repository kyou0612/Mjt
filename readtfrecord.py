# -*- coding: utf-8 -*-
"""readtfrecord.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1afVSMvoe7_V_Yl_2x2LPiGnYS7TYhNQs
"""

import tensorflow as tf

def deserialize_example_1p(serialized_string):
    image_feature_description = {
        'x': tf.io.FixedLenFeature([], tf.string),
        'y1': tf.io.FixedLenFeature([], tf.string),
    }
    example = tf.io.parse_single_example(serialized_string, image_feature_description)
    image = tf.reshape(tf.io.decode_raw(example["x"], tf.int32), (24, 36, 1))
    label = tf.io.decode_raw(example["y1"], tf.int32)
    return image, label

def deserialize_example_4p(serialized_string):
    image_feature_description = {
        'x': tf.io.FixedLenFeature([], tf.string),
        'y1': tf.io.FixedLenFeature([], tf.string),
        'y2': tf.io.FixedLenFeature([], tf.string),
        'y3': tf.io.FixedLenFeature([], tf.string),
        'y4': tf.io.FixedLenFeature([], tf.string),



    }
    example = tf.io.parse_single_example(serialized_string, image_feature_description)
    image = tf.reshape(tf.io.decode_raw(example["x"], tf.int32), (96, 37, 1))
    label1 = tf.io.decode_raw(example["y1"], tf.int32)
    label2 = tf.io.decode_raw(example["y2"], tf.int32)
    label3 = tf.io.decode_raw(example["y3"], tf.int32)
    label4 = tf.io.decode_raw(example["y4"], tf.int32)


    return image, label1, label2, label3, label4

def deserialize_example_4p_test(serialized_string):
    image_feature_description = {
        'x': tf.io.FixedLenFeature([], tf.string),
        'y1': tf.io.FixedLenFeature([], tf.string),
        'y2': tf.io.FixedLenFeature([], tf.string),
        'y3': tf.io.FixedLenFeature([], tf.string),
        'y4': tf.io.FixedLenFeature([], tf.string),
        'sutelen': tf.io.FixedLenFeature([], tf.string),
        'lichi': tf.io.FixedLenFeature([], tf.string),
        'playernumber': tf.io.FixedLenFeature([], tf.string),

    }
    example = tf.io.parse_single_example(serialized_string, image_feature_description)
    image = tf.reshape(tf.io.decode_raw(example["x"], tf.int32), (96, 37, 1))
    label1 = tf.io.decode_raw(example["y1"], tf.int32)
    label2 = tf.io.decode_raw(example["y2"], tf.int32)
    label3 = tf.io.decode_raw(example["y3"], tf.int32)
    label4 = tf.io.decode_raw(example["y4"], tf.int32)
    label5 = tf.io.decode_raw(example["sutelen"], tf.int32)
    label6 = tf.io.decode_raw(example["lichi"], tf.int32)
    label7 = tf.io.decode_raw(example["playernumber"], tf.int32)
    return image, label1, label2, label3, label4, label5, label6, label7